name: Deploy to EC2

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .env file
        env:
          SSH_KEY: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          USERNAME: ${{ secrets.USERNAME }}
          HOST: ${{ secrets.HOST }}
        run: |
          # Transfer .env file to the remote server
          scp -o StrictHostKeyChecking=no -i "$SSH_KEY" .env "$USERNAME@$HOST:/home/ubuntu/auto_check_in/api_server/"

          # Create .env file on the remote server (if it doesn't exist)
          ssh -o StrictHostKeyChecking=no -i "$SSH_KEY" "$USERNAME@$HOST" "touch /home/ubuntu/auto_check_in/api_server/.env"

          # Append environment variables to the .env file on the remote server
          ssh -o StrictHostKeyChecking=no -i "$SSH_KEY" "$USERNAME@$HOST" "echo 'MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }}' >> /home/ubuntu/auto_check_in/api_server/.env"
          ssh -o StrictHostKeyChecking=no -i "$SSH_KEY" "$USERNAME@$HOST" "echo 'MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}' >> /home/ubuntu/auto_check_in/api_server/.env"
          ssh -o StrictHostKeyChecking=no -i "$SSH_KEY" "$USERNAME@$HOST" "echo 'DATABASE_NAME=${{ secrets.DATABASE_NAME }}' >> /home/ubuntu/auto_check_in/api_server/.env"
          ssh -o StrictHostKeyChecking=no -i "$SSH_KEY" "$USERNAME@$HOST" "echo 'JWT_SECRET=${{ secrets.JWT_SECRET }}' >> /home/ubuntu/auto_check_in/api_server/.env"
          ssh -o StrictHostKeyChecking=no -i "$SSH_KEY" "$USERNAME@$HOST" "echo 'CRAWLER_WEBSITE=${{ secrets.CRAWLER_WEBSITE }}' >> /home/ubuntu/auto_check_in/api_server/.env"


      - name: Deploy to EC2
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          SSH_KEY: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
        run: |
          ssh -o StrictHostKeyChecking=no -i "$SSH_KEY" "$USERNAME@$HOST" "cd /home/ubuntu/auto_check_in/api_server && bash setup.sh"

